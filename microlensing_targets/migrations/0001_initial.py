# Generated by Django 4.2.4 on 2024-05-28 23:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tom_targets", "0021_rename_target_basetarget_alter_basetarget_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="MicrolensingTarget",
            fields=[
                (
                    "basetarget_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tom_targets.basetarget",
                    ),
                ),
                ("alive", models.BooleanField(default=True)),
                (
                    "classification",
                    models.CharField(default="Microlensing PSPL", max_length=50),
                ),
                (
                    "category",
                    models.CharField(
                        default="Microlensing stellar/planet", max_length=50
                    ),
                ),
                ("observing_mode", models.CharField(default=" No", max_length=10)),
                ("sky_location", models.CharField(default="Unknown", max_length=20)),
                ("t0", models.FloatField(default=0)),
                ("t0_error", models.FloatField(default=0)),
                ("u0", models.FloatField(default=0)),
                ("u0_error", models.FloatField(default=0)),
                ("tE", models.FloatField(default=0)),
                ("tE_error", models.FloatField(default=0)),
                ("piEN", models.FloatField(default=0)),
                ("piEN_error", models.FloatField(default=0)),
                ("piEE", models.FloatField(default=0)),
                ("piEE_error", models.FloatField(default=0)),
                ("rho", models.FloatField(default=0)),
                ("rho_error", models.FloatField(default=0)),
                ("s", models.FloatField(default=0)),
                ("s_error", models.FloatField(default=0)),
                ("q", models.FloatField(default=0)),
                ("q_error", models.FloatField(default=0)),
                ("alpha", models.FloatField(default=0)),
                ("alpha_error", models.FloatField(default=0)),
                ("source_magnitude", models.FloatField(default=0)),
                ("source_mag_error", models.FloatField(default=0)),
                ("blend_magnitude", models.FloatField(default=0)),
                ("blend_mag_error", models.FloatField(default=0)),
                ("baseline_magnitude", models.FloatField(default=0)),
                ("baseline_mag_error", models.FloatField(default=0)),
                ("gaia_source_id", models.CharField(default="", max_length=30)),
                ("gmag", models.FloatField(default=0)),
                ("gmag_error", models.FloatField(default=0)),
                ("rpmag", models.FloatField(default=0)),
                ("rpmag_error", models.FloatField(default=0)),
                ("bpmag", models.FloatField(default=0)),
                ("bpmag_error", models.FloatField(default=0)),
                ("bprp", models.FloatField(default=0)),
                ("bprp_error", models.FloatField(default=0)),
                ("reddening_bprp", models.FloatField(default=0)),
                ("extinction_g", models.FloatField(default=0)),
                ("teff", models.FloatField(default=0)),
                ("logg", models.FloatField(default=0)),
                ("metallicity", models.FloatField(default=0)),
                ("ruwe", models.FloatField(default=0)),
                ("fit_covariance", models.JSONField(default="")),
                ("tap_priority", models.FloatField(default=0)),
                ("tap_priority_error", models.FloatField(default=0)),
                ("tap_priority_longte", models.FloatField(default=0)),
                ("tap_priority_longte_error", models.FloatField(default=0)),
                ("interferometry_mode", models.CharField(default="", max_length=30)),
                ("interferometry_guide_star", models.FloatField(default=0)),
                ("interferometry_candidate", models.BooleanField(default=False)),
                ("spectras", models.FloatField(default=0)),
                ("last_fit", models.FloatField(default=2446756.5)),
                ("chi2", models.FloatField(default=99999.9999)),
                ("red_chi2", models.FloatField(default=99999.9999)),
                ("ks_test", models.FloatField(default=0)),
                ("sw_test", models.FloatField(default=0)),
                ("ad_test", models.FloatField(default=0)),
                ("latest_data_hjd", models.FloatField(default=0)),
                ("latest_data_utc", models.DateTimeField()),
                ("mag_now", models.FloatField(default=0)),
                ("mag_now_passband", models.CharField(default="", max_length=10)),
                ("mag_peak_J", models.FloatField(default=0)),
                ("mag_peak_J_error", models.FloatField(default=0)),
                ("mag_peak_H", models.FloatField(default=0)),
                ("mag_peak_H_error", models.FloatField(default=0)),
                ("mag_peak_K", models.FloatField(default=0)),
                ("mag_peak_K_error", models.FloatField(default=0)),
                ("mag_base_J", models.FloatField(default=0)),
                ("mag_base_H", models.FloatField(default=0)),
                ("mag_base_K", models.FloatField(default=0)),
                ("interferometry_interval", models.FloatField(default=0)),
                ("YSO", models.BooleanField(default=False)),
                ("QSO", models.BooleanField(default=False)),
                ("galaxy", models.BooleanField(default=False)),
                ("TNS_name", models.CharField(default="None", max_length=20)),
                ("TNS_class", models.CharField(default="None", max_length=30)),
            ],
            options={
                "verbose_name": "target",
                "permissions": (
                    ("view_target", "View Target"),
                    ("add_target", "Add Target"),
                    ("change_target", "Change Target"),
                    ("delete_target", "Delete Target"),
                ),
            },
            bases=("tom_targets.basetarget",),
        ),
    ]
