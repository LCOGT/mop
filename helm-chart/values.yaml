# Default values for mop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

gunicornWorkers: 2
gunicornTimeout: 300

# CronJob: Fit Need Events XX
# Selects the first available alive event to model
fitneedevents:
  enabled: true
  # Run every 4 hours
  schedule: "30 2,6,10,14,18,22 * * *"
  # maximum execution time: 4 hours - 10 minutes == 14400 seconds - 600 seconds == 13800 seconds
  # if it takes longer than this, it will be terminated and marked FAILED
  activeDeadlineSeconds: 13800
  # default to non-parallel operation (multi-Node / multi-Machine)
  parallelism: 1
  # default to non-parallel operation (multi-CPU within one Node)
  cores: 1
  # run with cutoff of 3 hours ago before running a new fit
  runEvery: 3
  # CPU/Memory resource requests/limits
  resources: {}

# CronJob: Run TAP XX
runtap:
  enabled: true
  schedule: "0 */4 * * *"
  resources: {}

# CronJob: Harvest ZTF DR3 XX
harvestztfdr3:
  enabled: true
  schedule: "15 12 * * *"
  resources: {}

# CronJob: Harvest GAIA XX
harvestgaia:
  enabled: true
  schedule: "0 11 * * *"
  resources: {}

# CronJob: Harvest MOA XX
harvestmoa:
  enabled: true
  schedule: "0 12 * * *"
  resources: {}

# CronJob: Harvest OGLE XX
harvestogle:
  enabled: true
  schedule: "30 1,7,13,19 * * *"
  resources: {}

# CronJob: Harvest ASAS-SN
harvestasassn:
  enabled: false
  schedule: "0 12 * * *"
  resources: {}

# CronJob: Gaia_classifier XX
gaiaclassifier:
  enabled: true
  schedule: "30 14 * * *"
  resources: {}

replicaCount: 1

image:
  repository: "docker.lco.global/mop"
  tag: stable
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# NGINX image (static files webserver)
nginx:
  image:
    repository: "nginx"
    tag: "1.16-alpine"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 10m
      memory: 16Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 101
    runAsGroup: 101

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Settings for the PostgreSQL database
applyDatabaseMigrations: true
useDockerizedDatabase: true

postgresql:
  auth:
    postgresPassword: "changeme"

  # see templates/_helpers.tpl for hostname generation
  hostname: ""
  postgresqlDatabase: "postgres"
  postgresqlUsername: "postgres"
  # You MUST override password in secret configuration file
  postgresqlPassword: "changeme"
  service:
    port: "5432"
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 400m
      memory: 512Mi

# Django Secret Key (must be overridden in secret configuration file)
djangoSecretKey: "changeme"

# Django Debug Mode (DISABLE in production)
djangoDebug: true

# Microlensing Observation Portal Secret Values
# These MUST be overridden in secret configuration file
antaresKey: ""
antaresPassword: ""
geminiUsername: ""
geminiNApiKey: ""
geminiSApiKey: ""
tnsApiKey: ""
lcoApiKey: ""
lcoProposalId: ""
lcoUsername: ""

# AWS Credentials
# These MUST be overriden in secret configuration file
awsAccessKeyId: ""
awsSecretAccessKey: ""
awsS3Bucket: ""

# Automatically load an initial dataset into the database
loadInitialData:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}
